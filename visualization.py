import yaml
from typing import Any

with open('config.yaml', 'r') as f:
    config = yaml.safe_load(f)

def generate_tom_visualization(tom: Any) -> str:
    """
    Generate a simple ASCII visualization of the Theory of Mind.
    """
    visualization = "Theory of Mind Visualization:\n"
    visualization += "=" * 40 + "\n"

    for category, elements in tom.frame.items():
        visualization += f"{category.capitalize()}:\n"
        for element in elements:
            confidence_bar = "â–ˆ" * int(element.confidence * 10)
            visualization += f"  [{confidence_bar:<10}] {element.content}...\n"
        visualization += "\n"

    visualization += "Blindspots:\n"
    if isinstance(tom.blindspots, list):
        for blindspot in tom.blindspots[:3]:  # Show top 3 blindspots
            visualization += f"  - {str(blindspot)}...\n"
    else:
        visualization += "  (No blindspots identified yet)\n"

    visualization += "\nNext Steps:\n"
    if isinstance(tom.next_steps, list):
        for step in tom.next_steps[:3]:  # Show top 3 next steps
            visualization += f"  - {str(step)}...\n"
    else:
        visualization += "  (No next steps identified yet)\n"

    return visualization

# For future implementation: More advanced visualization methods
from plotly.offline import plot
import plotly.graph_objects as go


def generate_graphical_visualization(tom: Any) -> str:
    """Return an HTML representation of the Theory of Mind as a bar chart.

    The chart visualizes the confidence of the first element in each category.
    The HTML generated by Plotly can be directly embedded in a web page.
    """

    categories = []
    confidences = []
    hover_texts = []

    for category, elements in tom.frame.items():
        if not elements:
            continue
        element = elements[0]
        categories.append(category.capitalize())
        confidences.append(element.confidence)
        hover_texts.append(element.content)

    fig = go.Figure(
        data=[go.Bar(x=categories, y=confidences, text=hover_texts, hoverinfo="text+y")]
    )
    fig.update_layout(
        title="Theory of Mind Confidence",
        yaxis=dict(title="Confidence", range=[0, 1]),
        xaxis=dict(title="Category"),
        height=400,
    )

    return plot(fig, include_plotlyjs=False, output_type="div")
